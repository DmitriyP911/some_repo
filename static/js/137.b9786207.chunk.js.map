{"version":3,"file":"static/js/137.b9786207.chunk.js","mappings":"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","sources":["components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.js","../node_modules/nanoid/index.browser.js","components/Contacts/Form/Form.styled.jsx","components/Contacts/Form/Form.js","components/Contacts/ListContacts/List.Contacts.styled.jsx","../node_modules/@mui/material/SvgIcon/svgIconClasses.js","../node_modules/@mui/material/SvgIcon/SvgIcon.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/utils/createSvgIcon.js","components/Contacts/ListContacts/ListContacts.js","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  width: 300px;\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input, Label } from './Filter.styled';\nimport { filteredContacts } from 'redux/Contacts/FilterSlice';\n\nexport default function Filter() {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    dispatch(filteredContacts(e.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find contacts by me\n      <Input type=\"text\" onChange={handleFilter} value={filter} />\n    </Label>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\nexport const Form = styled.form`\n  width: 300px;\n  height: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Label = styled.label`\n  width: 160px;\n  display: inline-block;\n  font-size: 16px;\n  font-weight: bold;\n  margin-left: 15px;\n`;\nexport const Input = styled.input``;\nexport const But = styled(Button)`\n  display: flex;\n  margin-top: 15px;\n  margin-left: 15px;\n  padding: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { But, Form, Input, Label } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../../redux/Contacts/operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${contacts.name} is already in contacts`);\n    } else {\n      dispatch(addContacts({ name, number }));\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  const idName = nanoid();\n  const idNumber = nanoid();\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={idName}>Name</Label>\n      <Input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n\n      <Label htmlFor={idNumber}>Number</Label>\n      <Input\n        id={idNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n\n      <But type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </But>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: flex-start;\n  height: 50px;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  color: #000;\n  text-decoration: none;\n  font-size: 1.2rem;\n`;\nexport const But = styled(Button)`\n  height: 35px;\n  margin-left: 15px;\n  border-radius: 5px;\n`;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'medium',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox\n  });\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, {\n    ownerState: ownerState,\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../SvgIcon';\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { But, Description, List, ListItem } from './List.Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../../redux/Contacts/operations';\nimport { getConctacs, getFilter, getLoading } from 'redux/Selectors';\nimport { Delete } from '@mui/icons-material';\n\nconst ListContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getConctacs);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getLoading);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {isLoading && <b>Loading contacts...</b>}\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <Description>\n            {name}: {number}\n          </Description>\n          <But\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={<Delete />}\n            data-id={id}\n            onClick={() => dispatch(deleteContacts(id))}\n          >\n            Delete\n          </But>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ListContacts;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport Filter from 'components/Contacts/Filter/Filter';\nimport Form from 'components/Contacts/Form/Form';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/Contacts/operations';\n\nimport ListContacts from 'components/Contacts/ListContacts/ListContacts';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        <Form />\n        <Filter />\n        <ListContacts />\n      </HelmetProvider>\n    </>\n  );\n}\nexport default Contacts;\n"],"names":["Label","styled","Input","Filter","filter","useSelector","state","dispatch","useDispatch","type","onChange","e","filteredContacts","currentTarget","value","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","But","Button","ContactForm","useState","name","setName","number","setNumber","contacts","handleChange","target","idName","idNumber","onSubmit","preventDefault","some","contact","alert","addContacts","htmlFor","pattern","title","required","disabled","List","ListItem","Description","getSvgIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SvgIconRoot","overridesResolver","props","styles","ownerState","root","color","capitalize","fontSize","_theme$transitions","_theme$transitions$cr","_theme$transitions2","_theme$transitions2$d","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_palette$ownerState$c","_palette","_palette$ownerState$c2","_palette2","_palette2$action","_palette3","_palette3$action","theme","userSelect","width","height","display","fill","flexShrink","transition","transitions","create","call","duration","shorter","inherit","small","typography","pxToRem","medium","large","vars","palette","main","action","active","undefined","SvgIcon","React","inProps","ref","useThemeProps","children","className","component","htmlColor","inheritViewBox","titleAccess","viewBox","other","_objectWithoutPropertiesLoose","_extends","instanceFontSize","more","classes","slots","composeClasses","useUtilityClasses","_jsxs","as","clsx","focusable","role","_jsx","muiName","path","displayName","Component","d","getConctacs","getFilter","isLoading","getLoading","toLowerCase","includes","map","variant","startIcon","Delete","onClick","deleteContacts","useEffect","fetchContacts"],"sourceRoot":""}